--Staging tables to EXTRACT raw data into the database.

USE APS_Assignment;

--Staging databases schema
CREATE SCHEMA [STG]; --Stage
GO

--SQL server data
CREATE TABLE STG.PHYSICAL_CUSTOMERS
(
	CUSTOMER_PK INT PRIMARY KEY,
	CUSTOMER_NAME VARCHAR(40) NOT NULL,	--40 so that there is a bit of available margin just in case
	CUSTOMER_SURNAME VARCHAR(40) NOT NULL
);
GO


CREATE TABLE STG.CORPORATE_CUSTOMERS
(
	CUSTOMER_PK INT PRIMARY KEY,
	COMPANY_TITLE VARCHAR(40) NOT NULL
);
GO


CREATE TABLE STG.BANKING_CUSTOMERS
(
	CUSTOMER_PK INT PRIMARY KEY,
	CUSTOMER_PROFILE INT UNIQUE NOT NULL,	--Only one customer profile can have one customer PK, hence no need for composite
	SALUTATION VARCHAR(10) NULL		--Caters for NULL string, to be TRANSORMED into SQL NULL
);
GO

SELECT *
FROM stg.banking_customers



--Oracle Data
CREATE TABLE STG.PROFILE_GROUPS
(
	CONSTRAINT PK_PROFILE_GROUPS PRIMARY KEY (CUSTOMER_GROUP_ID, PROFILE_NUMBER),	--In this case, composite key since one profile number can have multiple customer groups, and vice-versa
	PROFILE_NUMBER INT NOT NULL,
	CUSTOMER_GROUP_ID INT NOT NULL
);
GO

CREATE TABLE STG.ACCOUNTS
(
	ACCOUNT_NUMBER VARCHAR(40) PRIMARY KEY,
	CUSTOMER_GROUP_ID INT NOT NULL,
	PRODUCT_CODE INT NOT NULL,
	ACCOUNT_DESIGNATION VARCHAR(40) NOT NULL 
)
GO


CREATE TABLE STG.TRANSACTIONS
(
	TRANSACTION_NUMBER INT PRIMARY KEY,
	TRANSACTION_DATE DATE NOT NULL,
	DEBIT_CREDIT CHAR(1) NOT NULL,
	TRANSACTION_AMOUNT DECIMAL(10,2) NOT NULL,		--Due to working with currencies in a finance setting, decimal > float/double due to the data types working with approximations
	TRANSACTION_ACCOUNT_NUMBER VARCHAR(40) NOT NULL
);
GO

--EXEC sp_rename 'STG.TRANSACTIONS.TRANSACTION_AMOUNT_NUMBER', 'TRANSACTION_ACCOUNT_NUMBER', 'COLUMN'; 
--Had to rename the above column, I have renamed it to the correct one in the CREATE TABLE before sending assignment

--AFTER IMPORTING EXCEL SHEETS
SELECT *
FROM STG.BANKING_CUSTOMERS$
WHERE SALUTATION IS NULL;	--Checking and making sure that the 'NULL' values are of string data type and not SQL NULL. These are to be transformed into SQL NULL as there is no benefit to dropping entire columns due to null values in this case
GO




--What I do here is import the excel data into the 'APS_Assignment' database, 
--Insert it into the tables I created:


INSERT INTO STG.PHYSICAL_CUSTOMERS (CUSTOMER_PK, CUSTOMER_NAME, CUSTOMER_SURNAME)
SELECT 
    CUSTOMER_PK,
    CUSTOMER_FIRSTNAME,
    CUSTOMER_LASTNAME
FROM STG.PHYSICAL_CUSTOMERS$

SELECT * FROM STG.PHYSICAL_CUSTOMERS
GO



INSERT INTO STG.CORPORATE_CUSTOMERS (CUSTOMER_PK, COMPANY_TITLE)
SELECT 
    CUSTOMER_PK,
    COMPANY_TITLE
FROM STG.CORPORATE_CUSTOMERS$;
GO

SELECT * FROM STG.CORPORATE_CUSTOMERS
GO





INSERT INTO STG.BANKING_CUSTOMERS (CUSTOMER_PK, CUSTOMER_PROFILE, SALUTATION)
SELECT
   CUSTOMER_PK,
   CUSTOMER_PROFILE,
   SALUTATION
FROM STG.BANKING_CUSTOMERS$;
GO

SELECT * FROM STG.BANKING_CUSTOMERS
GO




INSERT INTO STG.PROFILE_GROUPS (CUSTOMER_GROUP_ID, PROFILE_NUMBER)
SELECT
    CUSTOMER_GROUP_ID,
    PROFILE_NUMBER
FROM STG.PROFILE_GROUPS$

SELECT * FROM STG.PROFILE_GROUPS





INSERT INTO STG.ACCOUNTS (ACCOUNT_NUMBER, CUSTOMER_GROUP_ID, PRODUCT_CODE, ACCOUNT_DESIGNATION)
SELECT
    ACCOUNT_NUMBER,
    CUSTOMER_GROUP_ID,
    PRODUCT_CODE,
    ACCOUNT_DESIGNATION
FROM STG.ACCOUNTS$;

SELECT * FROM STG.ACCOUNTS





INSERT INTO STG.TRANSACTIONS (TRANSACTION_NUMBER, TRANSACTION_DATE, DEBIT_CREDIT, TRANSACTION_AMOUNT, TRANSACTION_ACCOUNT_NUMBER)
SELECT
    TRANSACTION_NUMBER,
    TRANSACTION_DATE,
    DEBIT_CREDIT,
    TRANSACTION_AMOUNT,
    TRANSACTION_ACCOUNT_NUMBER
FROM STG.TRANSACTIONS$;

SELECT * FROM STG.TRANSACTIONS


--For my own testing:

SELECT * FROM STG.PHYSICAL_CUSTOMERS
SELECT * FROM STG.CORPORATE_CUSTOMERS
SELECT * FROM STG.BANKING_CUSTOMERS
SELECT * FROM STG.PROFILE_GROUPS
SELECT * FROM STG.ACCOUNTS
SELECT * FROM STG.TRANSACTIONS